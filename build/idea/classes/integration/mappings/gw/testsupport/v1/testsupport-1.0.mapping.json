{
  "schemaName": "gw.testsupport.v1.testsupport-1.0",
  "combine": [
    "ext.claim.v1.claim_combined_ext-1.0"
  ],
  "mappers": {
    "ContactSearchCriteria": {
      "schemaDefinition": "ContactSearchCriteria",
      "root": "entity.ContactSearchCriteria",
      "properties": {
        "address": {
          "path": "ContactSearchCriteria.Address",
          "mapper": "#/mappers/Address",
          "predicate": "false"
        },
        "companyName": {
          "path": "ContactSearchCriteria.Keyword",
          "predicate": "false"
        },
        "contactSubtype": {
          "path": "ContactSearchCriteria.ContactSubtype",
          "predicate": "false"
        },
        "employerName": {
          "path": "ContactSearchCriteria.OrganizationName",
          "predicate": "false"
        },
        "firstName": {
          "path": "ContactSearchCriteria.FirstName",
          "predicate": "false"
        },
        "lastName": {
          "path": "ContactSearchCriteria.Keyword",
          "predicate": "false"
        },
        "officialId": {
          "path": "ContactSearchCriteria.OfficialId",
          "predicate": "false"
        },
        "preferredVendors": {
          "path": "ContactSearchCriteria.PreferredVendors",
          "predicate": "false"
        },
        "taxId": {
          "path": "ContactSearchCriteria.TaxID",
          "predicate": "false"
        }
      }
    },
    // Suppress warnings from validation
    "PolicySearchRequestAttributes": {
      "schemaDefinition": "PolicySearchRequestAttributes",
      "root": "entity.PolicySearchCriteria",
      "properties": {
        "city": {
          "path": "PolicySearchCriteria.InsuredAddress.City",
          "predicate": "false"
        },
        "companyName": {
          "path": "PolicySearchCriteria.CompanyName",
          "predicate": "false"
        },
        "country": {
          "path": "PolicySearchCriteria.InsuredAddress.Country",
          "mapper": "#/mappers/TypeKeyReference",
          "predicate": "false"
        },
        "firstName": {
          "path": "PolicySearchCriteria.FirstName",
          "predicate": "false"
        },
        "lastName": {
          "path": "PolicySearchCriteria.LastName",
          "predicate": "false"
        },
        "lossDate": {
          "path": "PolicySearchCriteria.LossDate",
          "predicate": "false"
        },
        "lossType": {
          "path": "PolicySearchCriteria.LossType",
          "mapper": "#/mappers/TypeKeyReference",
          "predicate": "false"
        },
        "policyNumber": {
          "path": "PolicySearchCriteria.PolicyNumber",
          "predicate": "false"
        },
        "policyType": {
          "path": "PolicySearchCriteria.PolicyType",
          "mapper": "#/mappers/TypeKeyReference",
          "predicate": "false"
        },
        "postalCode": {
          "path": "PolicySearchCriteria.InsuredAddress.PostalCode",
          "predicate": "false"
        },
        "state": {
          "path": "PolicySearchCriteria.InsuredAddress.State",
          "mapper": "#/mappers/TypeKeyReference",
          "predicate": "false"
        },
        "taxId": {
          "path": "PolicySearchCriteria.TaxIdString",
          "predicate": "false"
        },
        "vin": {
          "path": "PolicySearchCriteria.Vin",
          "predicate": "false"
        }
      }
    },
    "PolicySearchResult": {
      "schemaDefinition": "PolicySearchResult",
      "root": "entity.PolicySummary",
      "properties": {
        "address": {
          "path": "new gw.rest.testsupport.v1.search.policies.PolicySummaryRestV1SupportMethods(PolicySummary).DisplayAddress"
        },
        "city": {
          "path": "new gw.rest.testsupport.v1.search.policies.PolicySummaryRestV1SupportMethods(PolicySummary).DisplayCity"
        },
        "effectiveDate": {
          "path": "PolicySummary.EffectiveDate"
        },
        "expirationDate": {
          "path": "PolicySummary.ExpirationDate"
        },
        "insuredName": {
          "path": "PolicySummary.InsuredName"
        },
        "policyNumber": {
          "path": "PolicySummary.PolicyNumber"
        },
        "policyType": {
          "path": "PolicySummary.PolicyType",
          "mapper": "#/mappers/TypeKeyReference"
        },
        "postalCode": {
          "path": "PolicySummary.PostalCode"
        },
        "state": {
          "path": "PolicySummary.State",
          "mapper": "#/mappers/TypeKeyReference"
        }
      }
    },
    "TestSupportBuilding": {
      "schemaDefinition": "TestSupportBuilding",
      "root": "entity.Building",
      "properties": {
        "buildingNumber": {
          "path": "Building.BuildingNumber"
        },
        "id": {
          "path": "Building.RestId"
        },
        "notes": {
          "path": "Building.Notes"
        },
        "policySystemId": {
          "path": "Building.PolicySystemId"
        }
      }
    },
    "TestSupportContact": {
      "schemaDefinition": "TestSupportContact",
      "root": "entity.Contact",
      "properties": {
        "addressBookUID": {
          "path": "Contact.AddressBookUID"
        },
        "cellPhone": {
          "path": "Contact.RestV1_getPhoneNumber(Person#CellPhone)",
          "mapper": "#/mappers/PhoneNumber",
          "predicate": "Contact typeis Person"
        },
        "companyName": {
          "path": "Contact.Name",
          "predicate": "Contact typeis Company"
        },
        "dateOfBirth": {
          "path": "(Contact as Person).RestV1_DateOfBirth",
          "predicate": "Contact typeis Person"
        },
        "displayName": {
          "path": "Contact.DisplayName"
        },
        "doctorSpecialty": {
          "path": "null as SpecialtyType",
          "mapper": "#/mappers/TypeKeyReference"
        },
        "emailAddress1": {
          "path": "Contact.EmailAddress1"
        },
        "emailAddress2": {
          "path": "Contact.EmailAddress2"
        },
        "firstName": {
          "path": "(Contact as Person).FirstName",
          "predicate": "Contact typeis Person"
        },
        "homePhone": {
          "path": "Contact.RestV1_getPhoneNumber(Contact#HomePhone)",
          "mapper": "#/mappers/PhoneNumber",
          "predicate": "Contact typeis Person"
        },
        "id": {
          "path": "Contact.RestId"
        },
        "lastName": {
          "path": "(Contact as Person).LastName",
          "predicate": "Contact typeis Person"
        },
        "licenseNumber": {
          "path": "(Contact as Person).LicenseNumber",
          "predicate": "Contact typeis Person"
        },
        "licenseState": {
          "path": "(Contact as Person).LicenseState",
          "mapper": "#/mappers/TypeKeyReference",
          "predicate": "Contact typeis Person"
        },
        "medicalLicense": {
          "path": "null as String"
        },
        "policySystemId": {
          "path": "Contact.PolicySystemId"
        },
        "primaryAddress": {
          "path": "Contact.PrimaryAddress",
          "mapper": "#/mappers/Address"
        },
        "primaryLanguage": {
          "path": "Contact.PrimaryLanguage",
          "mapper": "#/mappers/TypeKeyReference"
        },
        "primaryLocale": {
          "path": "Contact.PrimaryLocale",
          "mapper": "#/mappers/TypeKeyReference"
        },
        "primaryPhone": {
          "path": "Contact.PrimaryPhoneValue"
        },
        "primaryPhoneType": {
          "path": "Contact.PrimaryPhone",
          "mapper": "#/mappers/TypeKeyReference"
        },
        "subtype": {
          "path": "Contact.Subtype",
          "mapper": "#/mappers/TypeKeyReference"
        },
        "taxId": {
          "path": "null as String"
        },
        "workPhone": {
          "path": "Contact.RestV1_getPhoneNumber(Contact#WorkPhone)",
          "mapper": "#/mappers/PhoneNumber"
        }
      }
    },
    "TestSupportLocationBasedRiskUnit": {
      "schemaDefinition": "TestSupportLocationBasedRiskUnit",
      "root": "entity.LocationBasedRU",
      "properties": {
        "RUNumber": {
          "path": "LocationBasedRU.RUNumber"
        },
        "building": {
          "path": "LocationBasedRU.Building",
          "mapper": "#/mappers/TestSupportBuilding"
        },
        "coverages": {
          "path": "LocationBasedRU.Coverages.sortBy(\\cov -> cov.Type)",
          "mapper": "#/mappers/Coverage"
        },
        "description": {
          "path": "LocationBasedRU.Description"
        },
        "id": {
          "path": "LocationBasedRU.RestId"
        },
        "otherRiskType": {
          "path": "(LocationBasedRU as LocationMiscRU).OtherRiskType",
          "mapper": "#/mappers/TypeKeyReference",
          "predicate": "LocationBasedRU typeis LocationMiscRU"
        },
        "policySystemId": {
          "path": "LocationBasedRU.PolicySystemId"
        },
        "subtype": {
          "path": "LocationBasedRU.Subtype",
          "mapper": "#/mappers/TypeKeyReference"
        }
      }
    },
    "TestSupportPolicy": {
      "schemaDefinition": "TestSupportPolicy",
      "root": "entity.Policy",
      "properties": {
        "accountNumber": {
          "path": "Policy.AccountNumber"
        },
        "cancellationDate": {
          "path": "Policy.CancellationDate"
        },
        "currency": {
          "path": "Policy.Currency",
          "mapper": "#/mappers/TypeKeyReference"
        },
        "effectiveDate": {
          "path": "Policy.EffectiveDate"
        },
        "endorsements": {
          "path": "Policy.Endorsements",
          "mapper": "#/mappers/Endorsement"
        },
        "expirationDate": {
          "path": "Policy.ExpirationDate"
        },
        "id": {
          "path": "Policy.RestId"
        },
        "originalEffectiveDate": {
          "path": "Policy.OrigEffectiveDate"
        },
        "policyContacts": {
          "path": "Policy.Contacts",
          "mapper": "#/mappers/TestSupportPolicyContact"
        },
        "policyCoverages": {
          "path": "Policy.Coverages",
          "mapper": "#/mappers/Coverage"
        },
        "policyLocations": {
          "path": "Policy.PolicyLocations",
          "mapper": "#/mappers/TestSupportPolicyLocation"
        },
        "policyNumber": {
          "path": "Policy.PolicyNumber"
        },
        "policyType": {
          "path": "Policy.PolicyType",
          "mapper": "#/mappers/TypeKeyReference"
        },
        "producerCode": {
          "path": "Policy.ProducerCode"
        },
        "status": {
          "path": "Policy.Status",
          "mapper": "#/mappers/TypeKeyReference"
        },
        "underwritingCo": {
          "path": "Policy.UnderwritingCo",
          "mapper": "#/mappers/TypeKeyReference"
        },
        "underwritingGroup": {
          "path": "Policy.UnderwritingGroup",
          "mapper": "#/mappers/TypeKeyReference"
        },
        "vehicleRiskUnits": {
          "path": "Policy.Vehicles",
          "mapper": "#/mappers/TestSupportVehicleRiskUnit",
          "predicate": "Policy.PolicyType == TC_PERSONALAUTO"
        },
        "verifiedPolicy": {
          "path": "Policy.Verified"
        }
      }
    },
    "TestSupportPolicyContact": {
      "schemaDefinition": "TestSupportPolicyContact",
      "root": "entity.ClaimContact",
      "properties": {
        "contact": {
          "path": "ClaimContact.Contact",
          "mapper": "#/mappers/SimpleReference"
        },
        "roles": {
          "path": "ClaimContact.Roles*.Role",
          "mapper": "#/mappers/TypeKeyReference"
        }
      }
    },
    "TestSupportPolicyLocation": {
      "schemaDefinition": "TestSupportPolicyLocation",
      "root": "entity.PolicyLocation",
      "properties": {
        "address": {
          "path": "PolicyLocation.RestV1.PolicyLocationAddress",
          "mapper": "#/mappers/ClaimAddress"
        },
        "displayName": {
          "path": "PolicyLocation.DisplayName"
        },
        "id": {
          "path": "PolicyLocation.RestId"
        },
        "locationBasedRiskUnits": {
          "path": "PolicyLocation.LocationBasedRisks.sortBy(\\risk -> risk.RUNumber)",
          "mapper": "#/mappers/TestSupportLocationBasedRiskUnit",
          "predicate": "new gw.rest.testsupport.v1.policies.PolicyRestV1SupportMethods(PolicyLocation.Policy).PropertyPolicy"
        },
        "locationNumber": {
          "path": "PolicyLocation.LocationNumber"
        },
        "notes": {
          "path": "PolicyLocation.Notes"
        },
        "policySystemId": {
          "path": "PolicyLocation.PolicySystemId"
        },
        "primaryLocation": {
          "path": "PolicyLocation.PrimaryLocation"
        }
      }
    },
    "TestSupportRole": {
      "schemaDefinition": "TestSupportRole",
      "root": "entity.Role",
      "properties": {
        "id": {
          "path": "Role.RestId"
        },
        "name": {
          "path": "Role.Name"
        },
        "permissions": {
          "path": "Role.Privileges*.Permission*.Code"
        }
      }
    },
    "TestSupportUser": {
      "schemaDefinition": "TestSupportUser",
      "root": "entity.User",
      "properties": {
        "authorityProfile": {
          "path": "User.AuthorityProfile.Name"
        },
        "groupId": {
          "path": "User.RootGroup.RestId"
        },
        "id": {
          "path": "User.RestId"
        },
        "roles": {
          "path": "User.Roles*.Role*.RestId"
        },
        "username": {
          "path": "User.Credential.UserName"
        }
      }
    },
    "TestSupportVehicleRiskUnit": {
      "schemaDefinition": "TestSupportVehicleRiskUnit",
      "root": "entity.VehicleRU",
      "properties": {
        "RUNumber": {
          "path": "VehicleRU.RUNumber"
        },
        "coverages": {
          "path": "VehicleRU.Coverages.sortBy(\\cov -> cov.Type)",
          "mapper": "#/mappers/Coverage"
        },
        "description": {
          "path": "VehicleRU.Description"
        },
        "id": {
          "path": "VehicleRU.RestId"
        },
        "policySystemId": {
          "path": "VehicleRU.PolicySystemId"
        },
        "vehicle": {
          "path": "VehicleRU.RestV1.VehicleWrapper",
          "mapper": "#/mappers/ClaimVehicle"
        },
        "vehicleId": {
          "path": "VehicleRU.Vehicle.RestId"
        },
        "vehicleLocation": {
          "path": "VehicleRU.VehicleLocation",
          "mapper": "#/mappers/PolicyLocation"
        }
      }
    }
  }
}