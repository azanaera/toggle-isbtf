<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../../../../pcf.xsd">
  <DetailViewPanel
    id="LossDetailsDV"
    mode="Auto">
    <Require
      name="Claim"
      type="Claim"/>
    <InputColumn
      maxWidth="480px">
      <Label
        label="DisplayKey.get(&quot;NVV.Claim.SubView.LossDetailsAuto.Claim.LossDetails&quot;)"/>
      <TextAreaInput
        editable="true"
        id="Description"
        label="DisplayKey.get(&quot;NVV.Claim.SubView.LossDetailsAuto.Claim.Description&quot;)"
        numRows="3"
        required="true"
        value="Claim.Description"></TextAreaInput>
      <TypeKeyInput
        editable="true"
        id="LossCause"
        label="DisplayKey.get(&quot;NVV.Claim.SubView.LossDetailsAuto.Claim.LossCause&quot;)"
        required="true"
        value="Claim.LossCause"
        valueType="typekey.LossCause">
        <PostOnChange
          onChange="ext.config.claim.LossDetailsHelper_Ext.DefaultClaimFaultAndFaultRating(Claim)"/>
      </TypeKeyInput>
      <TypeKeyInput
        editable="true"
        id="Notification_Fault"
        label="DisplayKey.get(&quot;NVV.Claim.SubView.LossDetailsAuto.Claim.Notification.Fault&quot;)"
        value="Claim.FaultRating"
        valueType="typekey.FaultRating">
        <PostOnChange
          deferUpdate="false"/>
      </TypeKeyInput>
      <TextInput
        editable="true"
        formatType="percentagePoints"
        id="Notification_AtFaultPercentage"
        label="DisplayKey.get(&quot;NVV.Claim.SubView.LossDetailsAuto.Claim.Notification.AtFaultPercentage&quot;)"
        value="Claim.Fault"
        valueType="java.math.BigDecimal"
        visible="true"/>
      <RangeInput
        editable="true"
        id="Catastrophe_CatastropheNumber"
        label="DisplayKey.get(&quot;NVV.Claim.SubView.LossDetailsAuto.Claim.Catastrophe.CatastropheNumber&quot;)"
        required="false"
        value="Claim.Catastrophe"
        valueRange="ext.config.claim.LossDetailsHelper_Ext.getCatastrophes(CatastropheType.TC_INTERNAL)"
        valueType="entity.Catastrophe"/>
      <RangeInput
        editable="true"
        id="Catastrophe_CatastropheNumber_Ext"
        label="DisplayKey.get(&quot;Toggle.NVV.Claim.SubView.LossDetailsAuto.Claim.Catastrophe.ISOCatastropheNumber_Ext&quot;)"
        required="false"
        value="Claim.ISOCatastrophe_Ext"
        valueRange="ext.config.claim.LossDetailsHelper_Ext.getCatastrophes(CatastropheType.TC_ISO)"
        valueType="entity.Catastrophe"/>
      <TypeKeyInput
        editable="true"
        id="Claim_Weather"
        label="DisplayKey.get(&quot;NVV.Claim.SubView.LossDetailsAuto.Claim.Weather&quot;)"
        value="Claim.Weather"
        valueType="typekey.WeatherType"/>
      <BooleanRadioInput
        editable="true"
        id="Claim_EmploymentCourse"
        label="DisplayKey.get(&quot;NVV.Claim.SubView.LossDetailsAuto.Claim.EmploymentCourse&quot;)"
        value="Claim.EmploymentInjury"/>
      <DateInput
        dateFormat="short"
        editable="true"
        id="LossDate"
        label="DisplayKey.get(&quot;NVV.Claim.SubView.LossDetailsAuto.Claim.LossDate&quot;)"
        required="true"
        timeFormat="short"
        validationExpression="Claim.LossDate == null || Claim.LossDate &lt; gw.api.util.DateUtil.currentDate() ? null : DisplayKey.get(&quot;Java.Validation.Date.ForbidFuture&quot;)"
        value="Claim.LossDate">
        <PostOnChange
          onChange="gw.pcf.ClaimLossDetailsUtil.changedLossDate(Claim)"/>
      </DateInput>
      <InputDivider/>
      <Label
        label="DisplayKey.get(&quot;NVV.Claim.SubView.LossDetailsAuto.Claim.LossLocation&quot;)"/>
      <InputSetRef
        def="CCAddressInputSet(Claim.AddressOwner)"/>
      <InputDivider/>
      <Label
        label="DisplayKey.get(&quot;NVV.Claim.SubView.LossDetailsAuto.Claim.Notification&quot;)"/>
      <BooleanRadioInput
        editable="true"
        id="Notification_FirstNoticeSuit"
        label="DisplayKey.get(&quot;NVV.Claim.SubView.LossDetailsAuto.Claim.Notification.FirstNoticeSuit&quot;)"
        value="Claim.FirstNoticeSuit"/>
      <TypeKeyInput
        editable="true"
        id="Notification_HowReported"
        label="DisplayKey.get(&quot;NVV.Claim.SubView.LossDetailsAuto.Claim.Notification.HowReported&quot;)"
        value="Claim.HowReported"
        valueType="typekey.HowReportedType"/>
      <ClaimContactInput
        claim="Claim"
        editable="true"
        id="ReportedBy_Picker"
        label="DisplayKey.get(&quot;NVV.Claim.SubView.LossDetailsAuto.Claim.Notification.ReportedBy.Picker&quot;)"
        newContactMenu="ClaimNewPersonOnlyPickerMenuItemSet"
        required="true"
        value="Claim.reporter"
        valueRange="Claim.RelatedPersonArray"/>
      <TypeKeyInput
        editable="true"
        id="Notification_ReportedByType"
        label="DisplayKey.get(&quot;NVV.Claim.SubView.LossDetailsAuto.Claim.Notification.ReportedByType&quot;)"
        required="true"
        value="Claim.ReportedByType"
        valueType="typekey.PersonRelationType">
        <Reflect
          triggerIds="ReportedBy_Picker">
          <ReflectCondition
            condition="VALUE==Claim.Insured"
            value="&quot;self&quot;"/>
          <ReflectCondition
            condition="true"
            value="&quot;&quot;"/>
        </Reflect>
      </TypeKeyInput>
      <ClaimContactInput
        claim="Claim"
        editable="true"
        id="MainContact_Picker"
        label="DisplayKey.get(&quot;NVV.Claim.SubView.LossDetailsAuto.Claim.Notification.MainContact.Picker&quot;)"
        newContactMenu="ClaimNewPersonOnlyPickerMenuItemSet"
        value="Claim.maincontact"
        valueRange="Claim.RelatedPersonArray"
        valueType="entity.Person"/>
      <TypeKeyInput
        editable="true"
        id="Notification_MainContactType"
        label="DisplayKey.get(&quot;NVV.Claim.SubView.LossDetailsAuto.Claim.Notification.MainContactType&quot;)"
        value="Claim.MainContactType"
        valueType="typekey.PersonRelationType">
        <Reflect
          triggerIds="MainContact_Picker">
          <ReflectCondition
            condition="VALUE==Claim.Insured"
            value="&quot;self&quot;"/>
          <ReflectCondition
            condition="true"
            value="&quot;&quot;"/>
        </Reflect>
      </TypeKeyInput>
      <DateInput
        dateFormat="short"
        editable="true"
        id="Notification_DateReportedToAgent"
        label="DisplayKey.get(&quot;NVV.Claim.SubView.LossDetailsAuto.Claim.Notification.DateReportedToAgent&quot;)"
        timeFormat="short"
        value="Claim.DateRptdToAgent"/>
      <InputDivider/>
    </InputColumn>
    <InputColumn>
      <ListViewInput
        boldLabel="true"
        def="EditableVehicleIncidentsLV(Claim)"
        editable="true"
        label="DisplayKey.get(&quot;NVV.Claim.SubView.LossDetailsAuto.Claim.Vehicles&quot;)"
        labelAbove="true">
        <Toolbar>
          <IteratorButtons
            iterator="EditableVehicleIncidentsLV.EditableVehicleIncidentsLV"
            removeFlags="all Removeable"/>
        </Toolbar>
      </ListViewInput>
      <InputDivider/>
      <ListViewInput
        boldLabel="true"
        def="EditableFixedPropertyIncidentsLV(Claim)"
        editable="true"
        id="Claim_Properties"
        label="DisplayKey.get(&quot;NVV.Claim.SubView.LossDetailsAuto.Claim.Properties&quot;)"
        labelAbove="true">
        <Toolbar>
          <IteratorButtons
            iterator="Claim_Properties.EditableFixedPropertyIncidentsLV"
            removeFlags="all Removeable"/>
        </Toolbar>
      </ListViewInput>
      <InputDivider/>
      <ListViewInput
        boldLabel="true"
        def="EditableInjuryIncidentsLV(Claim)"
        editable="true"
        label="DisplayKey.get(&quot;NVV.Claim.SubView.LossDetails.Claim.Injuries&quot;)"
        labelAbove="true">
        <Toolbar>
          <IteratorButtons
            iterator="EditableInjuryIncidentsLV.EditableInjuryIncidentsLV"
            removeFlags="all Removeable"/>
        </Toolbar>
      </ListViewInput>
      <InputDivider
        __disabled="true"/>
      <ListViewInput
        boldLabel="true"
        def="EditableOfficialsLV(Claim)"
        editable="true"
        label="DisplayKey.get(&quot;NVV.Claim.SubView.LossDetailsAuto.Claim.Officials&quot;)"
        labelAbove="true"
        __disabled="true">
        <Toolbar>
          <IteratorButtons
            iterator="EditableOfficialsLV.EditableOfficialsLV"/>
        </Toolbar>
      </ListViewInput>
      <InputDivider/>
      <Label
        label="DisplayKey.get(&quot;Web.SearchFindPolicyPanelSet.ClaimHistory.Label&quot;)"
        visible="Claim.Policy.PolicyType == PolicyType.TC_PERSONALAUTO"/>
      <ListViewInput
        labelAbove="true"
        visible="Claim.Policy.PolicyType == PolicyType.TC_PERSONALAUTO">
        <Toolbar/>
        <ListViewPanel
          id="otherClaimLV">
          <RowIterator
            editable="false"
            elementName="otherClaim"
            value="Claim.findPriorClaimsByPolicyNumber(Claim.Policy.PolicyNumber, {}) as gw.api.database.IQueryBeanResult&lt;PriorClaimView&gt;"
            valueType="gw.api.database.IQueryBeanResult&lt;entity.PriorClaimView&gt;">
            <IteratorSort
              sortBy="otherClaim.LossDate"
              sortDirection="descending"
              sortOrder="1"/>
            <Row
              highlighted="otherClaim.State != TC_CLOSED">
              <TypeKeyCell
                id="otherStatus"
                label="DisplayKey.get(&quot;LV.Claim.DuplicateClaimSearchResults.Claims.Status&quot;)"
                value="otherClaim.State"
                valueType="typekey.ClaimState"/>
              <TextCell
                action="pcf.ClaimForward.go(otherClaim.Claim)"
                id="otherID"
                label="DisplayKey.get(&quot;LV.Claim.DuplicateClaimSearchResults.Claims.ID&quot;)"
                value="otherClaim.ClaimNumber"
                wrap="false"/>
              <DateCell
                id="otherLossDate"
                label="DisplayKey.get(&quot;LV.Claim.DuplicateClaimSearchResults.Claims.LossDate&quot;)"
                sortDirection="descending"
                value="otherClaim.LossDate"/>
              <TextCell
                id="otherInsured"
                label="DisplayKey.get(&quot;Web.SearchFindPolicyPanelSet.otherClaimLV.Description.Label&quot;)"
                value="otherClaim.Description"/>
              <DateCell
                enableSort="false"
                id="otherPolicyID"
                label="DisplayKey.get(&quot;Web.SearchFindPolicyPanelSet.otherClaimLV.Reported.Label&quot;)"
                value="otherClaim.ReportedDate"/>
              <TextCell
                action="UserContactDetailPopup.push(otherClaim.Claim.AssignedUser)"
                enableSort="false"
                id="otherClaimant"
                label="DisplayKey.get(&quot;Web.SearchFindPolicyPanelSet.otherClaimLV.AssignTo.Label&quot;)"
                value="otherClaim.AssignedUserDisplayName"/>
            </Row>
          </RowIterator>
        </ListViewPanel>
      </ListViewInput>
    </InputColumn>
    <InputFooterSection>
      <ListViewInput
        def="EditableWitnessesLV(Claim.getClaimContactRolesByRole(TC_WITNESS), Claim, TC_WITNESS)"
        editable="true"
        label="DisplayKey.get(&quot;NVV.Claim.SubView.LossDetailsAuto.Claim.Witness.Header&quot;)"
        labelAbove="true">
        <Toolbar>
          <IteratorButtons
            iterator="EditableWitnessesLV.EditableWitnessesLV"/>
        </Toolbar>
      </ListViewInput>
      <ListViewInput
        def="EditableContributingFactorsLV(Claim)"
        editable="true"
        label="DisplayKey.get(&quot;NVV.Claim.SubView.LossDetailsAuto.Claim.ContributingFactors&quot;)"
        labelAbove="true">
        <Toolbar>
          <IteratorButtons
            iterator="EditableContributingFactorsLV.EditableContributingFactorsLV"/>
        </Toolbar>
      </ListViewInput>
      <ListViewInput
        def="MetroReportsLV(Claim)"
        editable="true"
        label="DisplayKey.get(&quot;NVV.Claim.SubView.LossDetailsAuto.Claim.MetroReports&quot;)"
        labelAbove="true"
        visible="Claim.MetroEnable"
        __disabled="true">
        <Toolbar>
          <IteratorButtons
            addLabel="DisplayKey.get(&quot;Button.Metro.New&quot;)"
            iterator="MetroReportsLV.MetroReportsLV"
            removeFlags="any RemovableMetroReport, no NotRemovableMetroReport"/>
        </Toolbar>
      </ListViewInput>
    </InputFooterSection>
  </DetailViewPanel>
</PCF>
